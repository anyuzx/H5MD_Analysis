# cython: language_level=3
# cython: linetrace=True
import cython
import numpy as np
cimport numpy as np

from libc.math cimport sqrt
from libc.math cimport nearbyint
from libc.math cimport cos
from libc.math cimport sin
from libc.math cimport pow

@cython.boundscheck(False)
@cython.wraparound(False)
@cython.cdivision(True)
cdef leb26():
    cdef double [:,:] res = np.array([[ 1.        ,  0.        ,  0.        ,  0.04761905],
       [-1.        ,  0.        ,  0.        ,  0.04761905],
       [ 0.        ,  1.        ,  0.        ,  0.04761905],
       [ 0.        , -1.        ,  0.        ,  0.04761905],
       [ 0.        ,  0.        ,  1.        ,  0.04761905],
       [ 0.        ,  0.        , -1.        ,  0.04761905],
       [ 0.        ,  0.70710678,  0.70710678,  0.03809524],
       [ 0.        , -0.70710678,  0.70710678,  0.03809524],
       [ 0.        ,  0.70710678, -0.70710678,  0.03809524],
       [ 0.        , -0.70710678, -0.70710678,  0.03809524],
       [ 0.70710678,  0.        ,  0.70710678,  0.03809524],
       [-0.70710678,  0.        ,  0.70710678,  0.03809524],
       [ 0.70710678,  0.        , -0.70710678,  0.03809524],
       [-0.70710678,  0.        , -0.70710678,  0.03809524],
       [ 0.70710678,  0.70710678,  0.        ,  0.03809524],
       [-0.70710678,  0.70710678,  0.        ,  0.03809524],
       [ 0.70710678, -0.70710678,  0.        ,  0.03809524],
       [-0.70710678, -0.70710678,  0.        ,  0.03809524],
       [ 0.57735027,  0.57735027,  0.57735027,  0.03214286],
       [-0.57735027,  0.57735027,  0.57735027,  0.03214286],
       [ 0.57735027, -0.57735027,  0.57735027,  0.03214286],
       [-0.57735027, -0.57735027,  0.57735027,  0.03214286],
       [ 0.57735027,  0.57735027, -0.57735027,  0.03214286],
       [-0.57735027,  0.57735027, -0.57735027,  0.03214286],
       [ 0.57735027, -0.57735027, -0.57735027,  0.03214286],
       [-0.57735027, -0.57735027, -0.57735027,  0.03214286]], dtype=np.float64)

    return res

@cython.boundscheck(False)
@cython.wraparound(False)
@cython.cdivision(True)
cdef leb86():
    cdef double [:,:] res = np.array([[ 1.        ,  0.        ,  0.        ,  0.01154401],
       [-1.        ,  0.        ,  0.        ,  0.01154401],
       [ 0.        ,  1.        ,  0.        ,  0.01154401],
       [ 0.        , -1.        ,  0.        ,  0.01154401],
       [ 0.        ,  0.        ,  1.        ,  0.01154401],
       [ 0.        ,  0.        , -1.        ,  0.01154401],
       [ 0.57735027,  0.57735027,  0.57735027,  0.01194391],
       [-0.57735027,  0.57735027,  0.57735027,  0.01194391],
       [ 0.57735027, -0.57735027,  0.57735027,  0.01194391],
       [-0.57735027, -0.57735027,  0.57735027,  0.01194391],
       [ 0.57735027,  0.57735027, -0.57735027,  0.01194391],
       [-0.57735027,  0.57735027, -0.57735027,  0.01194391],
       [ 0.57735027, -0.57735027, -0.57735027,  0.01194391],
       [-0.57735027, -0.57735027, -0.57735027,  0.01194391],
       [ 0.36960285,  0.36960285,  0.85251831,  0.01111056],
       [-0.36960285,  0.36960285,  0.85251831,  0.01111056],
       [ 0.36960285, -0.36960285,  0.85251831,  0.01111056],
       [-0.36960285, -0.36960285,  0.85251831,  0.01111056],
       [ 0.36960285,  0.36960285, -0.85251831,  0.01111056],
       [-0.36960285,  0.36960285, -0.85251831,  0.01111056],
       [ 0.36960285, -0.36960285, -0.85251831,  0.01111056],
       [-0.36960285, -0.36960285, -0.85251831,  0.01111056],
       [ 0.36960285,  0.85251831,  0.36960285,  0.01111056],
       [-0.36960285,  0.85251831,  0.36960285,  0.01111056],
       [ 0.36960285, -0.85251831,  0.36960285,  0.01111056],
       [-0.36960285, -0.85251831,  0.36960285,  0.01111056],
       [ 0.36960285,  0.85251831, -0.36960285,  0.01111056],
       [-0.36960285,  0.85251831, -0.36960285,  0.01111056],
       [ 0.36960285, -0.85251831, -0.36960285,  0.01111056],
       [-0.36960285, -0.85251831, -0.36960285,  0.01111056],
       [ 0.85251831,  0.36960285,  0.36960285,  0.01111056],
       [-0.85251831,  0.36960285,  0.36960285,  0.01111056],
       [ 0.85251831, -0.36960285,  0.36960285,  0.01111056],
       [-0.85251831, -0.36960285,  0.36960285,  0.01111056],
       [ 0.85251831,  0.36960285, -0.36960285,  0.01111056],
       [-0.85251831,  0.36960285, -0.36960285,  0.01111056],
       [ 0.85251831, -0.36960285, -0.36960285,  0.01111056],
       [-0.85251831, -0.36960285, -0.36960285,  0.01111056],
       [ 0.69435401,  0.69435401,  0.18906355,  0.0118765 ],
       [-0.69435401,  0.69435401,  0.18906355,  0.0118765 ],
       [ 0.69435401, -0.69435401,  0.18906355,  0.0118765 ],
       [-0.69435401, -0.69435401,  0.18906355,  0.0118765 ],
       [ 0.69435401,  0.69435401, -0.18906355,  0.0118765 ],
       [-0.69435401,  0.69435401, -0.18906355,  0.0118765 ],
       [ 0.69435401, -0.69435401, -0.18906355,  0.0118765 ],
       [-0.69435401, -0.69435401, -0.18906355,  0.0118765 ],
       [ 0.69435401,  0.18906355,  0.69435401,  0.0118765 ],
       [-0.69435401,  0.18906355,  0.69435401,  0.0118765 ],
       [ 0.69435401, -0.18906355,  0.69435401,  0.0118765 ],
       [-0.69435401, -0.18906355,  0.69435401,  0.0118765 ],
       [ 0.69435401,  0.18906355, -0.69435401,  0.0118765 ],
       [-0.69435401,  0.18906355, -0.69435401,  0.0118765 ],
       [ 0.69435401, -0.18906355, -0.69435401,  0.0118765 ],
       [-0.69435401, -0.18906355, -0.69435401,  0.0118765 ],
       [ 0.18906355,  0.69435401,  0.69435401,  0.0118765 ],
       [-0.18906355,  0.69435401,  0.69435401,  0.0118765 ],
       [ 0.18906355, -0.69435401,  0.69435401,  0.0118765 ],
       [-0.18906355, -0.69435401,  0.69435401,  0.0118765 ],
       [ 0.18906355,  0.69435401, -0.69435401,  0.0118765 ],
       [-0.18906355,  0.69435401, -0.69435401,  0.0118765 ],
       [ 0.18906355, -0.69435401, -0.69435401,  0.0118765 ],
       [-0.18906355, -0.69435401, -0.69435401,  0.0118765 ],
       [ 0.37424304,  0.92733066,  0.        ,  0.0118123 ],
       [-0.37424304,  0.92733066,  0.        ,  0.0118123 ],
       [ 0.37424304, -0.92733066,  0.        ,  0.0118123 ],
       [-0.37424304, -0.92733066,  0.        ,  0.0118123 ],
       [ 0.92733066,  0.37424304,  0.        ,  0.0118123 ],
       [-0.92733066,  0.37424304,  0.        ,  0.0118123 ],
       [ 0.92733066, -0.37424304,  0.        ,  0.0118123 ],
       [-0.92733066, -0.37424304,  0.        ,  0.0118123 ],
       [ 0.37424304,  0.        ,  0.92733066,  0.0118123 ],
       [-0.37424304,  0.        ,  0.92733066,  0.0118123 ],
       [ 0.37424304,  0.        , -0.92733066,  0.0118123 ],
       [-0.37424304,  0.        , -0.92733066,  0.0118123 ],
       [ 0.92733066,  0.        ,  0.37424304,  0.0118123 ],
       [-0.92733066,  0.        ,  0.37424304,  0.0118123 ],
       [ 0.92733066,  0.        , -0.37424304,  0.0118123 ],
       [-0.92733066,  0.        , -0.37424304,  0.0118123 ],
       [ 0.        ,  0.37424304,  0.92733066,  0.0118123 ],
       [ 0.        , -0.37424304,  0.92733066,  0.0118123 ],
       [ 0.        ,  0.37424304, -0.92733066,  0.0118123 ],
       [ 0.        , -0.37424304, -0.92733066,  0.0118123 ],
       [ 0.        ,  0.92733066,  0.37424304,  0.0118123 ],
       [ 0.        , -0.92733066,  0.37424304,  0.0118123 ],
       [ 0.        ,  0.92733066, -0.37424304,  0.0118123 ],
       [ 0.        , -0.92733066, -0.37424304,  0.0118123 ]], dtype=np.float64)
    return res

@cython.boundscheck(False)
@cython.wraparound(False)
@cython.cdivision(True)
cdef leb194():
    cdef double [:,:] res = np.array([[ 1.        ,  0.        ,  0.        ,  0.00178234],
       [-1.        ,  0.        ,  0.        ,  0.00178234],
       [ 0.        ,  1.        ,  0.        ,  0.00178234],
       [ 0.        , -1.        ,  0.        ,  0.00178234],
       [ 0.        ,  0.        ,  1.        ,  0.00178234],
       [ 0.        ,  0.        , -1.        ,  0.00178234],
       [ 0.        ,  0.70710678,  0.70710678,  0.00571691],
       [ 0.        , -0.70710678,  0.70710678,  0.00571691],
       [ 0.        ,  0.70710678, -0.70710678,  0.00571691],
       [ 0.        , -0.70710678, -0.70710678,  0.00571691],
       [ 0.70710678,  0.        ,  0.70710678,  0.00571691],
       [-0.70710678,  0.        ,  0.70710678,  0.00571691],
       [ 0.70710678,  0.        , -0.70710678,  0.00571691],
       [-0.70710678,  0.        , -0.70710678,  0.00571691],
       [ 0.70710678,  0.70710678,  0.        ,  0.00571691],
       [-0.70710678,  0.70710678,  0.        ,  0.00571691],
       [ 0.70710678, -0.70710678,  0.        ,  0.00571691],
       [-0.70710678, -0.70710678,  0.        ,  0.00571691],
       [ 0.57735027,  0.57735027,  0.57735027,  0.00557338],
       [-0.57735027,  0.57735027,  0.57735027,  0.00557338],
       [ 0.57735027, -0.57735027,  0.57735027,  0.00557338],
       [-0.57735027, -0.57735027,  0.57735027,  0.00557338],
       [ 0.57735027,  0.57735027, -0.57735027,  0.00557338],
       [-0.57735027,  0.57735027, -0.57735027,  0.00557338],
       [ 0.57735027, -0.57735027, -0.57735027,  0.00557338],
       [-0.57735027, -0.57735027, -0.57735027,  0.00557338],
       [ 0.67129734,  0.67129734,  0.31419699,  0.0056087 ],
       [-0.67129734,  0.67129734,  0.31419699,  0.0056087 ],
       [ 0.67129734, -0.67129734,  0.31419699,  0.0056087 ],
       [-0.67129734, -0.67129734,  0.31419699,  0.0056087 ],
       [ 0.67129734,  0.67129734, -0.31419699,  0.0056087 ],
       [-0.67129734,  0.67129734, -0.31419699,  0.0056087 ],
       [ 0.67129734, -0.67129734, -0.31419699,  0.0056087 ],
       [-0.67129734, -0.67129734, -0.31419699,  0.0056087 ],
       [ 0.67129734,  0.31419699,  0.67129734,  0.0056087 ],
       [-0.67129734,  0.31419699,  0.67129734,  0.0056087 ],
       [ 0.67129734, -0.31419699,  0.67129734,  0.0056087 ],
       [-0.67129734, -0.31419699,  0.67129734,  0.0056087 ],
       [ 0.67129734,  0.31419699, -0.67129734,  0.0056087 ],
       [-0.67129734,  0.31419699, -0.67129734,  0.0056087 ],
       [ 0.67129734, -0.31419699, -0.67129734,  0.0056087 ],
       [-0.67129734, -0.31419699, -0.67129734,  0.0056087 ],
       [ 0.31419699,  0.67129734,  0.67129734,  0.0056087 ],
       [-0.31419699,  0.67129734,  0.67129734,  0.0056087 ],
       [ 0.31419699, -0.67129734,  0.67129734,  0.0056087 ],
       [-0.31419699, -0.67129734,  0.67129734,  0.0056087 ],
       [ 0.31419699,  0.67129734, -0.67129734,  0.0056087 ],
       [-0.31419699,  0.67129734, -0.67129734,  0.0056087 ],
       [ 0.31419699, -0.67129734, -0.67129734,  0.0056087 ],
       [-0.31419699, -0.67129734, -0.67129734,  0.0056087 ],
       [ 0.28924656,  0.28924656,  0.9125091 ,  0.00515824],
       [-0.28924656,  0.28924656,  0.9125091 ,  0.00515824],
       [ 0.28924656, -0.28924656,  0.9125091 ,  0.00515824],
       [-0.28924656, -0.28924656,  0.9125091 ,  0.00515824],
       [ 0.28924656,  0.28924656, -0.9125091 ,  0.00515824],
       [-0.28924656,  0.28924656, -0.9125091 ,  0.00515824],
       [ 0.28924656, -0.28924656, -0.9125091 ,  0.00515824],
       [-0.28924656, -0.28924656, -0.9125091 ,  0.00515824],
       [ 0.28924656,  0.9125091 ,  0.28924656,  0.00515824],
       [-0.28924656,  0.9125091 ,  0.28924656,  0.00515824],
       [ 0.28924656, -0.9125091 ,  0.28924656,  0.00515824],
       [-0.28924656, -0.9125091 ,  0.28924656,  0.00515824],
       [ 0.28924656,  0.9125091 , -0.28924656,  0.00515824],
       [-0.28924656,  0.9125091 , -0.28924656,  0.00515824],
       [ 0.28924656, -0.9125091 , -0.28924656,  0.00515824],
       [-0.28924656, -0.9125091 , -0.28924656,  0.00515824],
       [ 0.9125091 ,  0.28924656,  0.28924656,  0.00515824],
       [-0.9125091 ,  0.28924656,  0.28924656,  0.00515824],
       [ 0.9125091 , -0.28924656,  0.28924656,  0.00515824],
       [-0.9125091 , -0.28924656,  0.28924656,  0.00515824],
       [ 0.9125091 ,  0.28924656, -0.28924656,  0.00515824],
       [-0.9125091 ,  0.28924656, -0.28924656,  0.00515824],
       [ 0.9125091 , -0.28924656, -0.28924656,  0.00515824],
       [-0.9125091 , -0.28924656, -0.28924656,  0.00515824],
       [ 0.44469332,  0.44469332,  0.77749322,  0.00551877],
       [-0.44469332,  0.44469332,  0.77749322,  0.00551877],
       [ 0.44469332, -0.44469332,  0.77749322,  0.00551877],
       [-0.44469332, -0.44469332,  0.77749322,  0.00551877],
       [ 0.44469332,  0.44469332, -0.77749322,  0.00551877],
       [-0.44469332,  0.44469332, -0.77749322,  0.00551877],
       [ 0.44469332, -0.44469332, -0.77749322,  0.00551877],
       [-0.44469332, -0.44469332, -0.77749322,  0.00551877],
       [ 0.44469332,  0.77749322,  0.44469332,  0.00551877],
       [-0.44469332,  0.77749322,  0.44469332,  0.00551877],
       [ 0.44469332, -0.77749322,  0.44469332,  0.00551877],
       [-0.44469332, -0.77749322,  0.44469332,  0.00551877],
       [ 0.44469332,  0.77749322, -0.44469332,  0.00551877],
       [-0.44469332,  0.77749322, -0.44469332,  0.00551877],
       [ 0.44469332, -0.77749322, -0.44469332,  0.00551877],
       [-0.44469332, -0.77749322, -0.44469332,  0.00551877],
       [ 0.77749322,  0.44469332,  0.44469332,  0.00551877],
       [-0.77749322,  0.44469332,  0.44469332,  0.00551877],
       [ 0.77749322, -0.44469332,  0.44469332,  0.00551877],
       [-0.77749322, -0.44469332,  0.44469332,  0.00551877],
       [ 0.77749322,  0.44469332, -0.44469332,  0.00551877],
       [-0.77749322,  0.44469332, -0.44469332,  0.00551877],
       [ 0.77749322, -0.44469332, -0.44469332,  0.00551877],
       [-0.77749322, -0.44469332, -0.44469332,  0.00551877],
       [ 0.12993354,  0.12993354,  0.9829723 ,  0.00410678],
       [-0.12993354,  0.12993354,  0.9829723 ,  0.00410678],
       [ 0.12993354, -0.12993354,  0.9829723 ,  0.00410678],
       [-0.12993354, -0.12993354,  0.9829723 ,  0.00410678],
       [ 0.12993354,  0.12993354, -0.9829723 ,  0.00410678],
       [-0.12993354,  0.12993354, -0.9829723 ,  0.00410678],
       [ 0.12993354, -0.12993354, -0.9829723 ,  0.00410678],
       [-0.12993354, -0.12993354, -0.9829723 ,  0.00410678],
       [ 0.12993354,  0.9829723 ,  0.12993354,  0.00410678],
       [-0.12993354,  0.9829723 ,  0.12993354,  0.00410678],
       [ 0.12993354, -0.9829723 ,  0.12993354,  0.00410678],
       [-0.12993354, -0.9829723 ,  0.12993354,  0.00410678],
       [ 0.12993354,  0.9829723 , -0.12993354,  0.00410678],
       [-0.12993354,  0.9829723 , -0.12993354,  0.00410678],
       [ 0.12993354, -0.9829723 , -0.12993354,  0.00410678],
       [-0.12993354, -0.9829723 , -0.12993354,  0.00410678],
       [ 0.9829723 ,  0.12993354,  0.12993354,  0.00410678],
       [-0.9829723 ,  0.12993354,  0.12993354,  0.00410678],
       [ 0.9829723 , -0.12993354,  0.12993354,  0.00410678],
       [-0.9829723 , -0.12993354,  0.12993354,  0.00410678],
       [ 0.9829723 ,  0.12993354, -0.12993354,  0.00410678],
       [-0.9829723 ,  0.12993354, -0.12993354,  0.00410678],
       [ 0.9829723 , -0.12993354, -0.12993354,  0.00410678],
       [-0.9829723 , -0.12993354, -0.12993354,  0.00410678],
       [ 0.34577022,  0.93831922,  0.        ,  0.00505185],
       [-0.34577022,  0.93831922,  0.        ,  0.00505185],
       [ 0.34577022, -0.93831922,  0.        ,  0.00505185],
       [-0.34577022, -0.93831922,  0.        ,  0.00505185],
       [ 0.93831922,  0.34577022,  0.        ,  0.00505185],
       [-0.93831922,  0.34577022,  0.        ,  0.00505185],
       [ 0.93831922, -0.34577022,  0.        ,  0.00505185],
       [-0.93831922, -0.34577022,  0.        ,  0.00505185],
       [ 0.34577022,  0.        ,  0.93831922,  0.00505185],
       [-0.34577022,  0.        ,  0.93831922,  0.00505185],
       [ 0.34577022,  0.        , -0.93831922,  0.00505185],
       [-0.34577022,  0.        , -0.93831922,  0.00505185],
       [ 0.93831922,  0.        ,  0.34577022,  0.00505185],
       [-0.93831922,  0.        ,  0.34577022,  0.00505185],
       [ 0.93831922,  0.        , -0.34577022,  0.00505185],
       [-0.93831922,  0.        , -0.34577022,  0.00505185],
       [ 0.        ,  0.34577022,  0.93831922,  0.00505185],
       [ 0.        , -0.34577022,  0.93831922,  0.00505185],
       [ 0.        ,  0.34577022, -0.93831922,  0.00505185],
       [ 0.        , -0.34577022, -0.93831922,  0.00505185],
       [ 0.        ,  0.93831922,  0.34577022,  0.00505185],
       [ 0.        , -0.93831922,  0.34577022,  0.00505185],
       [ 0.        ,  0.93831922, -0.34577022,  0.00505185],
       [ 0.        , -0.93831922, -0.34577022,  0.00505185],
       [ 0.15904171,  0.83603602,  0.52511857,  0.00553025],
       [-0.15904171,  0.83603602,  0.52511857,  0.00553025],
       [ 0.15904171, -0.83603602,  0.52511857,  0.00553025],
       [-0.15904171, -0.83603602,  0.52511857,  0.00553025],
       [ 0.15904171,  0.83603602, -0.52511857,  0.00553025],
       [-0.15904171,  0.83603602, -0.52511857,  0.00553025],
       [ 0.15904171, -0.83603602, -0.52511857,  0.00553025],
       [-0.15904171, -0.83603602, -0.52511857,  0.00553025],
       [ 0.15904171,  0.52511857,  0.83603602,  0.00553025],
       [-0.15904171,  0.52511857,  0.83603602,  0.00553025],
       [ 0.15904171, -0.52511857,  0.83603602,  0.00553025],
       [-0.15904171, -0.52511857,  0.83603602,  0.00553025],
       [ 0.15904171,  0.52511857, -0.83603602,  0.00553025],
       [-0.15904171,  0.52511857, -0.83603602,  0.00553025],
       [ 0.15904171, -0.52511857, -0.83603602,  0.00553025],
       [-0.15904171, -0.52511857, -0.83603602,  0.00553025],
       [ 0.83603602,  0.15904171,  0.52511857,  0.00553025],
       [-0.83603602,  0.15904171,  0.52511857,  0.00553025],
       [ 0.83603602, -0.15904171,  0.52511857,  0.00553025],
       [-0.83603602, -0.15904171,  0.52511857,  0.00553025],
       [ 0.83603602,  0.15904171, -0.52511857,  0.00553025],
       [-0.83603602,  0.15904171, -0.52511857,  0.00553025],
       [ 0.83603602, -0.15904171, -0.52511857,  0.00553025],
       [-0.83603602, -0.15904171, -0.52511857,  0.00553025],
       [ 0.83603602,  0.52511857,  0.15904171,  0.00553025],
       [-0.83603602,  0.52511857,  0.15904171,  0.00553025],
       [ 0.83603602, -0.52511857,  0.15904171,  0.00553025],
       [-0.83603602, -0.52511857,  0.15904171,  0.00553025],
       [ 0.83603602,  0.52511857, -0.15904171,  0.00553025],
       [-0.83603602,  0.52511857, -0.15904171,  0.00553025],
       [ 0.83603602, -0.52511857, -0.15904171,  0.00553025],
       [-0.83603602, -0.52511857, -0.15904171,  0.00553025],
       [ 0.52511857,  0.15904171,  0.83603602,  0.00553025],
       [-0.52511857,  0.15904171,  0.83603602,  0.00553025],
       [ 0.52511857, -0.15904171,  0.83603602,  0.00553025],
       [-0.52511857, -0.15904171,  0.83603602,  0.00553025],
       [ 0.52511857,  0.15904171, -0.83603602,  0.00553025],
       [-0.52511857,  0.15904171, -0.83603602,  0.00553025],
       [ 0.52511857, -0.15904171, -0.83603602,  0.00553025],
       [-0.52511857, -0.15904171, -0.83603602,  0.00553025],
       [ 0.52511857,  0.83603602,  0.15904171,  0.00553025],
       [-0.52511857,  0.83603602,  0.15904171,  0.00553025],
       [ 0.52511857, -0.83603602,  0.15904171,  0.00553025],
       [-0.52511857, -0.83603602,  0.15904171,  0.00553025],
       [ 0.52511857,  0.83603602, -0.15904171,  0.00553025],
       [-0.52511857,  0.83603602, -0.15904171,  0.00553025],
       [ 0.52511857, -0.83603602, -0.15904171,  0.00553025],
       [-0.52511857, -0.83603602, -0.15904171,  0.00553025]], dtype=np.float64)
    return res

@cython.boundscheck(False)
@cython.wraparound(False)
@cython.cdivision(True) # used to not checking division, can have 20% performance speed up
def sk_lebedev_self(double [:,:] positions not None, double [:] k not None, double [:] l not None):
    # This function compute the pair-wise distances in a orthorhombic box with sides of length l1, l2 and l3
    cdef Py_ssize_t n = positions.shape[0]
    cdef Py_ssize_t ndim = positions.shape[1]
    cdef Py_ssize_t nk = k.shape[0]

    #cdef double [:,:] grid = leb26()
    #cdef double [:,:] grid = leb86()
    cdef double [:,:] grid = leb194()
    cdef Py_ssize_t nm = grid.shape[0]

    sk = np.zeros(nk, dtype = np.float64)
    cdef double [:] sk_view = sk

    cosmk = np.zeros((nk, nm), dtype = np.float64)
    cdef double [:,:] cosmk_view = cosmk

    sinmk = np.zeros((nk, nm), dtype = np.float64)
    cdef double [:,:] sinmk_view = sinmk

    cdef double d, ur_product, kr_product
    cdef Py_ssize_t m, i, p, q

    for m in range(nm):
        for i in range(n):
            ur_product = 0.0
            for p in range(ndim):
                ur_product = ur_product + positions[i,p] * grid[m, p] # grid[m,p] is the Lebedev grid point
            for q in range(nk):
                kr_product = k[q] * ur_product
                cosmk_view[q,m] += cos(kr_product)
                sinmk_view[q,m] += sin(kr_product)
        for q in range(nk):
            sk_view[q] = sk_view[q] + (1.0 / n) * grid[m, -1] * (pow(cosmk_view[q,m], 2.0) + pow(sinmk_view[q,m], 2.0)) # grid[m, -1] is the weight
    return sk
